

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Feb 07 21:44:01 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    12  0000                     _LATAbits	set	3977
    13  0000                     _LATBbits	set	3978
    14  0000                     _TRISAbits	set	3986
    15  0000                     _TRISBbits	set	3987
    16                           
    17 ;;
    18 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    19 ;;
    20 ;; *************** function _main *****************
    21 ;; Defined at:
    22 ;;		line 7 in file "main.c"
    23 ;; Parameters:    Size  Location     Type
    24 ;;  argc            2    3[COMRAM] int 
    25 ;;  argv            3    5[COMRAM] PTR PTR unsigned char 
    26 ;; Auto vars:     Size  Location     Type
    27 ;;  i               1   24[COMRAM] unsigned char 
    28 ;;  i               1   23[COMRAM] unsigned char 
    29 ;;  i               1   22[COMRAM] unsigned char 
    30 ;;  i               1   21[COMRAM] unsigned char 
    31 ;;  i               1   20[COMRAM] unsigned char 
    32 ;;  i               1   19[COMRAM] unsigned char 
    33 ;;  i               1   18[COMRAM] unsigned char 
    34 ;;  i               1   17[COMRAM] unsigned char 
    35 ;;  i               1   16[COMRAM] unsigned char 
    36 ;;  i               1   15[COMRAM] unsigned char 
    37 ;;  i               1   14[COMRAM] unsigned char 
    38 ;;  i               1   13[COMRAM] unsigned char 
    39 ;;  i               1   12[COMRAM] unsigned char 
    40 ;;  i               1   11[COMRAM] unsigned char 
    41 ;;  i               1   10[COMRAM] unsigned char 
    42 ;;  i               1    9[COMRAM] unsigned char 
    43 ;; Return value:  Size  Location     Type
    44 ;;                  2    3[COMRAM] int 
    45 ;; Registers used:
    46 ;;		wreg, status,2, status,0, cstack
    47 ;; Tracked objects:
    48 ;;		On entry : 0/0
    49 ;;		On exit  : 0/0
    50 ;;		Unchanged: 0/0
    51 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    52 ;;      Params:         5       0       0       0       0       0       0       0       0
    53 ;;      Locals:        16       0       0       0       0       0       0       0       0
    54 ;;      Temps:          1       0       0       0       0       0       0       0       0
    55 ;;      Totals:        22       0       0       0       0       0       0       0       0
    56 ;;Total ram usage:       22 bytes
    57 ;; Hardware stack levels required when called:    2
    58 ;; This function calls:
    59 ;;		_shift_data
    60 ;; This function is called by:
    61 ;;		Startup code after reset
    62 ;; This function uses a non-reentrant model
    63 ;;
    64                           
    65                           	psect	text0
    66  007DB2                     __ptext0:
    67                           	opt stack 0
    68  007DB2                     _main:
    69                           	opt stack 29
    70                           
    71                           ;main.c: 10: TRISBbits.TRISB7 = 0;
    72                           
    73                           ;incstack = 0
    74  007DB2  9E93               	bcf	3987,7,c	;volatile
    75                           
    76                           ;main.c: 11: TRISAbits.TRISA0 = 0;
    77  007DB4  9092               	bcf	3986,0,c	;volatile
    78                           
    79                           ;main.c: 12: TRISBbits.TRISB6 = 0;
    80  007DB6  9C93               	bcf	3987,6,c	;volatile
    81  007DB8                     l662:
    82                           
    83                           ;main.c: 15: shift_data(0b10000000);
    84  007DB8  0E80               	movlw	128
    85  007DBA  EC50  F03E         	call	_shift_data
    86                           
    87                           ;main.c: 16: for (unsigned char i=0; i<10; i++) {
    88  007DBE  0E00               	movlw	0
    89  007DC0  6E0A               	movwf	main@i,c
    90  007DC2  D009               	goto	L1
    91  007DC4                     l670:
    92                           
    93                           ;main.c: 17: _delay((unsigned long)((10)*(20000000/4000.0)));
    94  007DC4  0E41               	movlw	65
    95  007DC6  6E09               	movwf	??_main& (0+255),c
    96  007DC8  0EEE               	movlw	238
    97  007DCA                     u367:
    98  007DCA  2EE8               	decfsz	wreg,f,c
    99  007DCC  D7FE               	goto	u367
   100  007DCE  2E09               	decfsz	??_main& (0+255),f,c
   101  007DD0  D7FC               	goto	u367
   102  007DD2  D000               	nop2	
   103  007DD4  2A0A               	incf	main@i,f,c
   104  007DD6                     L1:
   105  007DD6  0E09               	movlw	9
   106  007DD8  640A               	cpfsgt	main@i,c
   107  007DDA  D7F4               	goto	l670
   108                           
   109                           ;main.c: 18: }
   110                           ;main.c: 19: shift_data(0b11000000);
   111  007DDC  0EC0               	movlw	192
   112  007DDE  EC50  F03E         	call	_shift_data
   113                           
   114                           ;main.c: 20: for (unsigned char i=0; i<10; i++) {
   115  007DE2  0E00               	movlw	0
   116  007DE4  6E0B               	movwf	main@i_300,c
   117  007DE6  D009               	goto	L2
   118  007DE8                     l684:
   119                           
   120                           ;main.c: 21: _delay((unsigned long)((10)*(20000000/4000.0)));
   121  007DE8  0E41               	movlw	65
   122  007DEA  6E09               	movwf	??_main& (0+255),c
   123  007DEC  0EEE               	movlw	238
   124  007DEE                     u377:
   125  007DEE  2EE8               	decfsz	wreg,f,c
   126  007DF0  D7FE               	goto	u377
   127  007DF2  2E09               	decfsz	??_main& (0+255),f,c
   128  007DF4  D7FC               	goto	u377
   129  007DF6  D000               	nop2	
   130  007DF8  2A0B               	incf	main@i_300,f,c
   131  007DFA                     L2:
   132  007DFA  0E09               	movlw	9
   133  007DFC  640B               	cpfsgt	main@i_300,c
   134  007DFE  D7F4               	goto	l684
   135                           
   136                           ;main.c: 22: }
   137                           ;main.c: 23: shift_data(0b11100000);
   138  007E00  0EE0               	movlw	224
   139  007E02  EC50  F03E         	call	_shift_data
   140                           
   141                           ;main.c: 24: for (unsigned char i=0; i<10; i++) {
   142  007E06  0E00               	movlw	0
   143  007E08  6E0C               	movwf	main@i_301,c
   144  007E0A  D009               	goto	L3
   145  007E0C                     l698:
   146                           
   147                           ;main.c: 25: _delay((unsigned long)((10)*(20000000/4000.0)));
   148  007E0C  0E41               	movlw	65
   149  007E0E  6E09               	movwf	??_main& (0+255),c
   150  007E10  0EEE               	movlw	238
   151  007E12                     u387:
   152  007E12  2EE8               	decfsz	wreg,f,c
   153  007E14  D7FE               	goto	u387
   154  007E16  2E09               	decfsz	??_main& (0+255),f,c
   155  007E18  D7FC               	goto	u387
   156  007E1A  D000               	nop2	
   157  007E1C  2A0C               	incf	main@i_301,f,c
   158  007E1E                     L3:
   159  007E1E  0E09               	movlw	9
   160  007E20  640C               	cpfsgt	main@i_301,c
   161  007E22  D7F4               	goto	l698
   162                           
   163                           ;main.c: 26: }
   164                           ;main.c: 27: shift_data(0b11110000);
   165  007E24  0EF0               	movlw	240
   166  007E26  EC50  F03E         	call	_shift_data
   167                           
   168                           ;main.c: 28: for (unsigned char i=0; i<10; i++) {
   169  007E2A  0E00               	movlw	0
   170  007E2C  6E0D               	movwf	main@i_302,c
   171  007E2E  D009               	goto	L4
   172  007E30                     l712:
   173                           
   174                           ;main.c: 29: _delay((unsigned long)((10)*(20000000/4000.0)));
   175  007E30  0E41               	movlw	65
   176  007E32  6E09               	movwf	??_main& (0+255),c
   177  007E34  0EEE               	movlw	238
   178  007E36                     u397:
   179  007E36  2EE8               	decfsz	wreg,f,c
   180  007E38  D7FE               	goto	u397
   181  007E3A  2E09               	decfsz	??_main& (0+255),f,c
   182  007E3C  D7FC               	goto	u397
   183  007E3E  D000               	nop2	
   184  007E40  2A0D               	incf	main@i_302,f,c
   185  007E42                     L4:
   186  007E42  0E09               	movlw	9
   187  007E44  640D               	cpfsgt	main@i_302,c
   188  007E46  D7F4               	goto	l712
   189                           
   190                           ;main.c: 30: }
   191                           ;main.c: 31: shift_data(0b11111000);
   192  007E48  0EF8               	movlw	248
   193  007E4A  EC50  F03E         	call	_shift_data
   194                           
   195                           ;main.c: 32: for (unsigned char i=0; i<10; i++) {
   196  007E4E  0E00               	movlw	0
   197  007E50  6E0E               	movwf	main@i_303,c
   198  007E52  D009               	goto	L5
   199  007E54                     l726:
   200                           
   201                           ;main.c: 33: _delay((unsigned long)((10)*(20000000/4000.0)));
   202  007E54  0E41               	movlw	65
   203  007E56  6E09               	movwf	??_main& (0+255),c
   204  007E58  0EEE               	movlw	238
   205  007E5A                     u407:
   206  007E5A  2EE8               	decfsz	wreg,f,c
   207  007E5C  D7FE               	goto	u407
   208  007E5E  2E09               	decfsz	??_main& (0+255),f,c
   209  007E60  D7FC               	goto	u407
   210  007E62  D000               	nop2	
   211  007E64  2A0E               	incf	main@i_303,f,c
   212  007E66                     L5:
   213  007E66  0E09               	movlw	9
   214  007E68  640E               	cpfsgt	main@i_303,c
   215  007E6A  D7F4               	goto	l726
   216                           
   217                           ;main.c: 34: }
   218                           ;main.c: 35: shift_data(0b11111100);
   219  007E6C  0EFC               	movlw	252
   220  007E6E  EC50  F03E         	call	_shift_data
   221                           
   222                           ;main.c: 36: for (unsigned char i=0; i<10; i++) {
   223  007E72  0E00               	movlw	0
   224  007E74  6E0F               	movwf	main@i_304,c
   225  007E76  D009               	goto	L6
   226  007E78                     l740:
   227                           
   228                           ;main.c: 37: _delay((unsigned long)((10)*(20000000/4000.0)));
   229  007E78  0E41               	movlw	65
   230  007E7A  6E09               	movwf	??_main& (0+255),c
   231  007E7C  0EEE               	movlw	238
   232  007E7E                     u417:
   233  007E7E  2EE8               	decfsz	wreg,f,c
   234  007E80  D7FE               	goto	u417
   235  007E82  2E09               	decfsz	??_main& (0+255),f,c
   236  007E84  D7FC               	goto	u417
   237  007E86  D000               	nop2	
   238  007E88  2A0F               	incf	main@i_304,f,c
   239  007E8A                     L6:
   240  007E8A  0E09               	movlw	9
   241  007E8C  640F               	cpfsgt	main@i_304,c
   242  007E8E  D7F4               	goto	l740
   243                           
   244                           ;main.c: 38: }
   245                           ;main.c: 39: shift_data(0b11111110);
   246  007E90  0EFE               	movlw	254
   247  007E92  EC50  F03E         	call	_shift_data
   248                           
   249                           ;main.c: 40: for (unsigned char i=0; i<10; i++) {
   250  007E96  0E00               	movlw	0
   251  007E98  6E10               	movwf	main@i_305,c
   252  007E9A  D009               	goto	L7
   253  007E9C                     l754:
   254                           
   255                           ;main.c: 41: _delay((unsigned long)((10)*(20000000/4000.0)));
   256  007E9C  0E41               	movlw	65
   257  007E9E  6E09               	movwf	??_main& (0+255),c
   258  007EA0  0EEE               	movlw	238
   259  007EA2                     u427:
   260  007EA2  2EE8               	decfsz	wreg,f,c
   261  007EA4  D7FE               	goto	u427
   262  007EA6  2E09               	decfsz	??_main& (0+255),f,c
   263  007EA8  D7FC               	goto	u427
   264  007EAA  D000               	nop2	
   265  007EAC  2A10               	incf	main@i_305,f,c
   266  007EAE                     L7:
   267  007EAE  0E09               	movlw	9
   268  007EB0  6410               	cpfsgt	main@i_305,c
   269  007EB2  D7F4               	goto	l754
   270                           
   271                           ;main.c: 42: }
   272                           ;main.c: 43: shift_data(0b11111111);
   273  007EB4  0EFF               	movlw	255
   274  007EB6  EC50  F03E         	call	_shift_data
   275                           
   276                           ;main.c: 44: for (unsigned char i=0; i<10; i++) {
   277  007EBA  0E00               	movlw	0
   278  007EBC  6E11               	movwf	main@i_306,c
   279  007EBE  D009               	goto	L8
   280  007EC0                     l768:
   281                           
   282                           ;main.c: 45: _delay((unsigned long)((10)*(20000000/4000.0)));
   283  007EC0  0E41               	movlw	65
   284  007EC2  6E09               	movwf	??_main& (0+255),c
   285  007EC4  0EEE               	movlw	238
   286  007EC6                     u437:
   287  007EC6  2EE8               	decfsz	wreg,f,c
   288  007EC8  D7FE               	goto	u437
   289  007ECA  2E09               	decfsz	??_main& (0+255),f,c
   290  007ECC  D7FC               	goto	u437
   291  007ECE  D000               	nop2	
   292  007ED0  2A11               	incf	main@i_306,f,c
   293  007ED2                     L8:
   294  007ED2  0E09               	movlw	9
   295  007ED4  6411               	cpfsgt	main@i_306,c
   296  007ED6  D7F4               	goto	l768
   297                           
   298                           ;main.c: 46: }
   299                           ;main.c: 47: shift_data(0b01111111);
   300  007ED8  0E7F               	movlw	127
   301  007EDA  EC50  F03E         	call	_shift_data
   302                           
   303                           ;main.c: 48: for (unsigned char i=0; i<10; i++) {
   304  007EDE  0E00               	movlw	0
   305  007EE0  6E12               	movwf	main@i_307,c
   306  007EE2  D009               	goto	L9
   307  007EE4                     l782:
   308                           
   309                           ;main.c: 49: _delay((unsigned long)((10)*(20000000/4000.0)));
   310  007EE4  0E41               	movlw	65
   311  007EE6  6E09               	movwf	??_main& (0+255),c
   312  007EE8  0EEE               	movlw	238
   313  007EEA                     u447:
   314  007EEA  2EE8               	decfsz	wreg,f,c
   315  007EEC  D7FE               	goto	u447
   316  007EEE  2E09               	decfsz	??_main& (0+255),f,c
   317  007EF0  D7FC               	goto	u447
   318  007EF2  D000               	nop2	
   319  007EF4  2A12               	incf	main@i_307,f,c
   320  007EF6                     L9:
   321  007EF6  0E09               	movlw	9
   322  007EF8  6412               	cpfsgt	main@i_307,c
   323  007EFA  D7F4               	goto	l782
   324                           
   325                           ;main.c: 50: }
   326                           ;main.c: 51: shift_data(0b00111111);
   327  007EFC  0E3F               	movlw	63
   328  007EFE  EC50  F03E         	call	_shift_data
   329                           
   330                           ;main.c: 52: for (unsigned char i=0; i<10; i++) {
   331  007F02  0E00               	movlw	0
   332  007F04  6E13               	movwf	main@i_308,c
   333  007F06  D009               	goto	L10
   334  007F08                     l796:
   335                           
   336                           ;main.c: 53: _delay((unsigned long)((10)*(20000000/4000.0)));
   337  007F08  0E41               	movlw	65
   338  007F0A  6E09               	movwf	??_main& (0+255),c
   339  007F0C  0EEE               	movlw	238
   340  007F0E                     u457:
   341  007F0E  2EE8               	decfsz	wreg,f,c
   342  007F10  D7FE               	goto	u457
   343  007F12  2E09               	decfsz	??_main& (0+255),f,c
   344  007F14  D7FC               	goto	u457
   345  007F16  D000               	nop2	
   346  007F18  2A13               	incf	main@i_308,f,c
   347  007F1A                     L10:
   348  007F1A  0E09               	movlw	9
   349  007F1C  6413               	cpfsgt	main@i_308,c
   350  007F1E  D7F4               	goto	l796
   351                           
   352                           ;main.c: 54: }
   353                           ;main.c: 55: shift_data(0b00011111);
   354  007F20  0E1F               	movlw	31
   355  007F22  EC50  F03E         	call	_shift_data
   356                           
   357                           ;main.c: 56: for (unsigned char i=0; i<10; i++) {
   358  007F26  0E00               	movlw	0
   359  007F28  6E14               	movwf	main@i_309,c
   360  007F2A  D009               	goto	L11
   361  007F2C                     l810:
   362                           
   363                           ;main.c: 57: _delay((unsigned long)((10)*(20000000/4000.0)));
   364  007F2C  0E41               	movlw	65
   365  007F2E  6E09               	movwf	??_main& (0+255),c
   366  007F30  0EEE               	movlw	238
   367  007F32                     u467:
   368  007F32  2EE8               	decfsz	wreg,f,c
   369  007F34  D7FE               	goto	u467
   370  007F36  2E09               	decfsz	??_main& (0+255),f,c
   371  007F38  D7FC               	goto	u467
   372  007F3A  D000               	nop2	
   373  007F3C  2A14               	incf	main@i_309,f,c
   374  007F3E                     L11:
   375  007F3E  0E09               	movlw	9
   376  007F40  6414               	cpfsgt	main@i_309,c
   377  007F42  D7F4               	goto	l810
   378                           
   379                           ;main.c: 58: }
   380                           ;main.c: 59: shift_data(0b00001111);
   381  007F44  0E0F               	movlw	15
   382  007F46  EC50  F03E         	call	_shift_data
   383                           
   384                           ;main.c: 60: for (unsigned char i=0; i<10; i++) {
   385  007F4A  0E00               	movlw	0
   386  007F4C  6E15               	movwf	main@i_310,c
   387  007F4E  D009               	goto	L12
   388  007F50                     l824:
   389                           
   390                           ;main.c: 61: _delay((unsigned long)((10)*(20000000/4000.0)));
   391  007F50  0E41               	movlw	65
   392  007F52  6E09               	movwf	??_main& (0+255),c
   393  007F54  0EEE               	movlw	238
   394  007F56                     u477:
   395  007F56  2EE8               	decfsz	wreg,f,c
   396  007F58  D7FE               	goto	u477
   397  007F5A  2E09               	decfsz	??_main& (0+255),f,c
   398  007F5C  D7FC               	goto	u477
   399  007F5E  D000               	nop2	
   400  007F60  2A15               	incf	main@i_310,f,c
   401  007F62                     L12:
   402  007F62  0E09               	movlw	9
   403  007F64  6415               	cpfsgt	main@i_310,c
   404  007F66  D7F4               	goto	l824
   405                           
   406                           ;main.c: 62: }
   407                           ;main.c: 63: shift_data(0b00000111);
   408  007F68  0E07               	movlw	7
   409  007F6A  EC50  F03E         	call	_shift_data
   410                           
   411                           ;main.c: 64: for (unsigned char i=0; i<10; i++) {
   412  007F6E  0E00               	movlw	0
   413  007F70  6E16               	movwf	main@i_311,c
   414  007F72  D009               	goto	L13
   415  007F74                     l838:
   416                           
   417                           ;main.c: 65: _delay((unsigned long)((10)*(20000000/4000.0)));
   418  007F74  0E41               	movlw	65
   419  007F76  6E09               	movwf	??_main& (0+255),c
   420  007F78  0EEE               	movlw	238
   421  007F7A                     u487:
   422  007F7A  2EE8               	decfsz	wreg,f,c
   423  007F7C  D7FE               	goto	u487
   424  007F7E  2E09               	decfsz	??_main& (0+255),f,c
   425  007F80  D7FC               	goto	u487
   426  007F82  D000               	nop2	
   427  007F84  2A16               	incf	main@i_311,f,c
   428  007F86                     L13:
   429  007F86  0E09               	movlw	9
   430  007F88  6416               	cpfsgt	main@i_311,c
   431  007F8A  D7F4               	goto	l838
   432                           
   433                           ;main.c: 66: }
   434                           ;main.c: 67: shift_data(0b00000011);
   435  007F8C  0E03               	movlw	3
   436  007F8E  EC50  F03E         	call	_shift_data
   437                           
   438                           ;main.c: 68: for (unsigned char i=0; i<10; i++) {
   439  007F92  0E00               	movlw	0
   440  007F94  6E17               	movwf	main@i_312,c
   441  007F96  D009               	goto	L14
   442  007F98                     l852:
   443                           
   444                           ;main.c: 69: _delay((unsigned long)((10)*(20000000/4000.0)));
   445  007F98  0E41               	movlw	65
   446  007F9A  6E09               	movwf	??_main& (0+255),c
   447  007F9C  0EEE               	movlw	238
   448  007F9E                     u497:
   449  007F9E  2EE8               	decfsz	wreg,f,c
   450  007FA0  D7FE               	goto	u497
   451  007FA2  2E09               	decfsz	??_main& (0+255),f,c
   452  007FA4  D7FC               	goto	u497
   453  007FA6  D000               	nop2	
   454  007FA8  2A17               	incf	main@i_312,f,c
   455  007FAA                     L14:
   456  007FAA  0E09               	movlw	9
   457  007FAC  6417               	cpfsgt	main@i_312,c
   458  007FAE  D7F4               	goto	l852
   459                           
   460                           ;main.c: 70: }
   461                           ;main.c: 71: shift_data(0b00000001);
   462  007FB0  0E01               	movlw	1
   463  007FB2  EC50  F03E         	call	_shift_data
   464                           
   465                           ;main.c: 72: for (unsigned char i=0; i<10; i++) {
   466  007FB6  0E00               	movlw	0
   467  007FB8  6E18               	movwf	main@i_313,c
   468  007FBA  D009               	goto	L15
   469  007FBC                     l866:
   470                           
   471                           ;main.c: 73: _delay((unsigned long)((10)*(20000000/4000.0)));
   472  007FBC  0E41               	movlw	65
   473  007FBE  6E09               	movwf	??_main& (0+255),c
   474  007FC0  0EEE               	movlw	238
   475  007FC2                     u507:
   476  007FC2  2EE8               	decfsz	wreg,f,c
   477  007FC4  D7FE               	goto	u507
   478  007FC6  2E09               	decfsz	??_main& (0+255),f,c
   479  007FC8  D7FC               	goto	u507
   480  007FCA  D000               	nop2	
   481  007FCC  2A18               	incf	main@i_313,f,c
   482  007FCE                     L15:
   483  007FCE  0E09               	movlw	9
   484  007FD0  6418               	cpfsgt	main@i_313,c
   485  007FD2  D7F4               	goto	l866
   486                           
   487                           ;main.c: 74: }
   488                           ;main.c: 75: shift_data(0b00000000);
   489  007FD4  0E00               	movlw	0
   490  007FD6  EC50  F03E         	call	_shift_data
   491                           
   492                           ;main.c: 76: for (unsigned char i=0; i<10; i++) {
   493  007FDA  0E00               	movlw	0
   494  007FDC  6E19               	movwf	main@i_314,c
   495  007FDE  0E09               	movlw	9
   496  007FE0  6419               	cpfsgt	main@i_314,c
   497  007FE2  D001               	goto	l880
   498  007FE4  D6E9               	goto	l662
   499  007FE6                     l880:
   500                           
   501                           ;main.c: 77: _delay((unsigned long)((10)*(20000000/4000.0)));
   502  007FE6  0E41               	movlw	65
   503  007FE8  6E09               	movwf	??_main& (0+255),c
   504  007FEA  0EEE               	movlw	238
   505  007FEC                     u517:
   506  007FEC  2EE8               	decfsz	wreg,f,c
   507  007FEE  D7FE               	goto	u517
   508  007FF0  2E09               	decfsz	??_main& (0+255),f,c
   509  007FF2  D7FC               	goto	u517
   510  007FF4  D000               	nop2	
   511  007FF6  2A19               	incf	main@i_314,f,c
   512  007FF8  0E09               	movlw	9
   513  007FFA  6419               	cpfsgt	main@i_314,c
   514  007FFC  D7F4               	goto	l880
   515  007FFE  D6DC               	goto	l662
   516  008000                     __end_of_main:
   517                           	opt stack 0
   518                           wreg	equ	0xFE8
   519                           
   520                           	psect	cinit
   521  007C9A                     __pcinit:
   522                           	opt stack 0
   523  007C9A                     start_initialization:
   524                           	opt stack 0
   525  007C9A                     __initialization:
   526                           	opt stack 0
   527  007C9A                     end_of_initialization:
   528                           	opt stack 0
   529  007C9A                     __end_of__initialization:
   530                           	opt stack 0
   531  007C9A  0100               	movlb	0
   532  007C9C  EFD9  F03E         	goto	_main	;jump to C main() function
   533                           wreg	equ	0xFE8
   534                           
   535                           	psect	cstackCOMRAM
   536  000001                     __pcstackCOMRAM:
   537                           	opt stack 0
   538  000001                     ??_shift_data:
   539                           
   540                           ; 0 bytes @ 0x0
   541  000001                     	ds	2
   542  000003                     shift_data@data:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x2
   546  000003                     	ds	1
   547  000004                     
   548                           ; 2 bytes @ 0x3
   549  000004                     	ds	2
   550  000006                     
   551                           ; 3 bytes @ 0x5
   552  000006                     	ds	3
   553  000009                     ??_main:
   554                           
   555                           ; 0 bytes @ 0x8
   556  000009                     	ds	1
   557  00000A                     main@i:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x9
   561  00000A                     	ds	1
   562  00000B                     main@i_300:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0xA
   566  00000B                     	ds	1
   567  00000C                     main@i_301:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0xB
   571  00000C                     	ds	1
   572  00000D                     main@i_302:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0xC
   576  00000D                     	ds	1
   577  00000E                     main@i_303:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0xD
   581  00000E                     	ds	1
   582  00000F                     main@i_304:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0xE
   586  00000F                     	ds	1
   587  000010                     main@i_305:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0xF
   591  000010                     	ds	1
   592  000011                     main@i_306:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x10
   596  000011                     	ds	1
   597  000012                     main@i_307:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x11
   601  000012                     	ds	1
   602  000013                     main@i_308:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x12
   606  000013                     	ds	1
   607  000014                     main@i_309:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x13
   611  000014                     	ds	1
   612  000015                     main@i_310:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x14
   616  000015                     	ds	1
   617  000016                     main@i_311:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x15
   621  000016                     	ds	1
   622  000017                     main@i_312:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x16
   626  000017                     	ds	1
   627  000018                     main@i_313:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x17
   631  000018                     	ds	1
   632  000019                     main@i_314:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x18
   636  000019                     	ds	1
   637                           wreg	equ	0xFE8
   638                           
   639 ;; *************** function _shift_data *****************
   640 ;; Defined at:
   641 ;;		line 20 in file "_74595.h"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  data            1    wreg     unsigned char 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  data            1    2[COMRAM] unsigned char 
   646 ;; Return value:  Size  Location     Type
   647 ;;		None               void
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   655 ;;      Params:         0       0       0       0       0       0       0       0       0
   656 ;;      Locals:         1       0       0       0       0       0       0       0       0
   657 ;;      Temps:          2       0       0       0       0       0       0       0       0
   658 ;;      Totals:         3       0       0       0       0       0       0       0       0
   659 ;;Total ram usage:        3 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    1
   662 ;; This function calls:
   663 ;;		_clk
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text1
   670  007CA0                     __ptext1:
   671                           	opt stack 0
   672  007CA0                     _shift_data:
   673                           	opt stack 29
   674                           
   675                           ;incstack = 0
   676                           ;shift_data@data stored from wreg
   677  007CA0  6E03               	movwf	shift_data@data,c
   678                           
   679                           ;_74595.h: 21: LATBbits.LATB6 = 0;
   680  007CA2  9C8A               	bcf	3978,6,c	;volatile
   681                           
   682                           ;_74595.h: 22: LATBbits.LATB7 = (data & 0b00000001);
   683  007CA4  C003  F001         	movff	shift_data@data,??_shift_data
   684  007CA8  0E01               	movlw	1
   685  007CAA  1601               	andwf	??_shift_data,f,c
   686  007CAC  3201               	rrcf	??_shift_data,f,c
   687  007CAE  3201               	rrcf	??_shift_data,f,c
   688  007CB0  508A               	movf	3978,w,c	;volatile
   689  007CB2  1801               	xorwf	??_shift_data,w,c
   690  007CB4  0B7F               	andlw	-129
   691  007CB6  1801               	xorwf	??_shift_data,w,c
   692  007CB8  6E8A               	movwf	3978,c	;volatile
   693                           
   694                           ;_74595.h: 23: clk();
   695  007CBA  EC4A  F03E         	call	_clk	;wreg free
   696                           
   697                           ;_74595.h: 25: LATBbits.LATB7 = (data & 0b00000010) >> 1;
   698  007CBE  C003  F001         	movff	shift_data@data,??_shift_data
   699  007CC2  90D8               	bcf	status,0,c
   700  007CC4  3201               	rrcf	??_shift_data,f,c
   701  007CC6  0E01               	movlw	1
   702  007CC8  1601               	andwf	??_shift_data,f,c
   703  007CCA  3201               	rrcf	??_shift_data,f,c
   704  007CCC  3201               	rrcf	??_shift_data,f,c
   705  007CCE  508A               	movf	3978,w,c	;volatile
   706  007CD0  1801               	xorwf	??_shift_data,w,c
   707  007CD2  0B7F               	andlw	-129
   708  007CD4  1801               	xorwf	??_shift_data,w,c
   709  007CD6  6E8A               	movwf	3978,c	;volatile
   710                           
   711                           ;_74595.h: 26: clk();
   712  007CD8  EC4A  F03E         	call	_clk	;wreg free
   713                           
   714                           ;_74595.h: 28: LATBbits.LATB7 = (data & 0b00000100) >> 2;
   715  007CDC  C003  F001         	movff	shift_data@data,??_shift_data
   716  007CE0  90D8               	bcf	status,0,c
   717  007CE2  3201               	rrcf	??_shift_data,f,c
   718  007CE4  90D8               	bcf	status,0,c
   719  007CE6  3201               	rrcf	??_shift_data,f,c
   720  007CE8  0E01               	movlw	1
   721  007CEA  1601               	andwf	??_shift_data,f,c
   722  007CEC  3201               	rrcf	??_shift_data,f,c
   723  007CEE  3201               	rrcf	??_shift_data,f,c
   724  007CF0  508A               	movf	3978,w,c	;volatile
   725  007CF2  1801               	xorwf	??_shift_data,w,c
   726  007CF4  0B7F               	andlw	-129
   727  007CF6  1801               	xorwf	??_shift_data,w,c
   728  007CF8  6E8A               	movwf	3978,c	;volatile
   729                           
   730                           ;_74595.h: 29: clk();
   731  007CFA  EC4A  F03E         	call	_clk	;wreg free
   732                           
   733                           ;_74595.h: 31: LATBbits.LATB7 = (data & 0b00001000) >> 3;
   734  007CFE  C003  F001         	movff	shift_data@data,??_shift_data
   735  007D02  90D8               	bcf	status,0,c
   736  007D04  3201               	rrcf	??_shift_data,f,c
   737  007D06  90D8               	bcf	status,0,c
   738  007D08  3201               	rrcf	??_shift_data,f,c
   739  007D0A  90D8               	bcf	status,0,c
   740  007D0C  3201               	rrcf	??_shift_data,f,c
   741  007D0E  0E01               	movlw	1
   742  007D10  1601               	andwf	??_shift_data,f,c
   743  007D12  3201               	rrcf	??_shift_data,f,c
   744  007D14  3201               	rrcf	??_shift_data,f,c
   745  007D16  508A               	movf	3978,w,c	;volatile
   746  007D18  1801               	xorwf	??_shift_data,w,c
   747  007D1A  0B7F               	andlw	-129
   748  007D1C  1801               	xorwf	??_shift_data,w,c
   749  007D1E  6E8A               	movwf	3978,c	;volatile
   750                           
   751                           ;_74595.h: 32: clk();
   752  007D20  EC4A  F03E         	call	_clk	;wreg free
   753                           
   754                           ;_74595.h: 34: LATBbits.LATB7 = (data & 0b00010000) >> 4;
   755  007D24  C003  F001         	movff	shift_data@data,??_shift_data
   756  007D28  3A01               	swapf	??_shift_data,f,c
   757  007D2A  0E0F               	movlw	15
   758  007D2C  1601               	andwf	??_shift_data,f,c
   759  007D2E  0E01               	movlw	1
   760  007D30  1601               	andwf	??_shift_data,f,c
   761  007D32  3201               	rrcf	??_shift_data,f,c
   762  007D34  3201               	rrcf	??_shift_data,f,c
   763  007D36  508A               	movf	3978,w,c	;volatile
   764  007D38  1801               	xorwf	??_shift_data,w,c
   765  007D3A  0B7F               	andlw	-129
   766  007D3C  1801               	xorwf	??_shift_data,w,c
   767  007D3E  6E8A               	movwf	3978,c	;volatile
   768                           
   769                           ;_74595.h: 35: clk();
   770  007D40  EC4A  F03E         	call	_clk	;wreg free
   771                           
   772                           ;_74595.h: 37: LATBbits.LATB7 = (data & 0b00100000) >> 5;
   773  007D44  C003  F001         	movff	shift_data@data,??_shift_data
   774  007D48  0E05               	movlw	5
   775  007D4A  6E02               	movwf	(??_shift_data+1)& (0+255),c
   776  007D4C                     u15:
   777  007D4C  90D8               	bcf	status,0,c
   778  007D4E  3201               	rrcf	??_shift_data,f,c
   779  007D50  2E02               	decfsz	(??_shift_data+1)& (0+255),f,c
   780  007D52  D7FC               	goto	u15
   781  007D54  0E01               	movlw	1
   782  007D56  1601               	andwf	??_shift_data,f,c
   783  007D58  3201               	rrcf	??_shift_data,f,c
   784  007D5A  3201               	rrcf	??_shift_data,f,c
   785  007D5C  508A               	movf	3978,w,c	;volatile
   786  007D5E  1801               	xorwf	??_shift_data,w,c
   787  007D60  0B7F               	andlw	-129
   788  007D62  1801               	xorwf	??_shift_data,w,c
   789  007D64  6E8A               	movwf	3978,c	;volatile
   790                           
   791                           ;_74595.h: 38: clk();
   792  007D66  EC4A  F03E         	call	_clk	;wreg free
   793                           
   794                           ;_74595.h: 40: LATBbits.LATB7 = (data & 0b01000000) >> 6;
   795  007D6A  C003  F001         	movff	shift_data@data,??_shift_data
   796  007D6E  0E06               	movlw	6
   797  007D70  6E02               	movwf	(??_shift_data+1)& (0+255),c
   798  007D72                     u25:
   799  007D72  90D8               	bcf	status,0,c
   800  007D74  3201               	rrcf	??_shift_data,f,c
   801  007D76  2E02               	decfsz	(??_shift_data+1)& (0+255),f,c
   802  007D78  D7FC               	goto	u25
   803  007D7A  0E01               	movlw	1
   804  007D7C  1601               	andwf	??_shift_data,f,c
   805  007D7E  3201               	rrcf	??_shift_data,f,c
   806  007D80  3201               	rrcf	??_shift_data,f,c
   807  007D82  508A               	movf	3978,w,c	;volatile
   808  007D84  1801               	xorwf	??_shift_data,w,c
   809  007D86  0B7F               	andlw	-129
   810  007D88  1801               	xorwf	??_shift_data,w,c
   811  007D8A  6E8A               	movwf	3978,c	;volatile
   812                           
   813                           ;_74595.h: 41: clk();
   814  007D8C  EC4A  F03E         	call	_clk	;wreg free
   815                           
   816                           ;_74595.h: 43: LATBbits.LATB7 = (data & 0b10000000) >> 7;
   817  007D90  6A01               	clrf	??_shift_data& (0+255),c
   818  007D92  AE03               	btfss	shift_data@data,7,c
   819  007D94  D001               	bra	u35
   820  007D96  2A01               	incf	??_shift_data& (0+255),f,c
   821  007D98                     u35:
   822  007D98  0E01               	movlw	1
   823  007D9A  1601               	andwf	??_shift_data,f,c
   824  007D9C  3201               	rrcf	??_shift_data,f,c
   825  007D9E  3201               	rrcf	??_shift_data,f,c
   826  007DA0  508A               	movf	3978,w,c	;volatile
   827  007DA2  1801               	xorwf	??_shift_data,w,c
   828  007DA4  0B7F               	andlw	-129
   829  007DA6  1801               	xorwf	??_shift_data,w,c
   830  007DA8  6E8A               	movwf	3978,c	;volatile
   831                           
   832                           ;_74595.h: 44: clk();
   833  007DAA  EC4A  F03E         	call	_clk	;wreg free
   834                           
   835                           ;_74595.h: 45: LATBbits.LATB6 = 1;
   836  007DAE  8C8A               	bsf	3978,6,c	;volatile
   837  007DB0  0012               	return	
   838  007DB2                     __end_of_shift_data:
   839                           	opt stack 0
   840                           wreg	equ	0xFE8
   841                           status	equ	0xFD8
   842                           
   843 ;; *************** function _clk *****************
   844 ;; Defined at:
   845 ;;		line 48 in file "_74595.h"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;		None               void
   852 ;; Registers used:
   853 ;;		None
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   859 ;;      Params:         0       0       0       0       0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_shift_data
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text2
   873  007C94                     __ptext2:
   874                           	opt stack 0
   875  007C94                     _clk:
   876                           	opt stack 29
   877                           
   878                           ;_74595.h: 49: LATAbits.LATA0 = 1;
   879                           
   880                           ;incstack = 0
   881  007C94  8089               	bsf	3977,0,c	;volatile
   882                           
   883                           ;_74595.h: 50: LATAbits.LATA0 = 0;
   884  007C96  9089               	bcf	3977,0,c	;volatile
   885  007C98  0012               	return	
   886  007C9A                     __end_of_clk:
   887                           	opt stack 0
   888  0000                     wreg	equ	0xFE8
   889                           status	equ	0xFD8
   890                           wreg	equ	0xFE8
   891                           status	equ	0xFD8
   892                           
   893                           	psect	rparam
   894  0000                     wreg	equ	0xFE8
   895                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_shift_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    17      5     600
                                              3 COMRAM    22    17      5
                         _shift_data
 ---------------------------------------------------------------------------------
 (1) _shift_data                                           3     3      0     120
                                              0 COMRAM     3     3      0
                                _clk
 ---------------------------------------------------------------------------------
 (2) _clk                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _shift_data
     _clk

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     19      19       1       26.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Feb 07 21:44:01 2016

                     u15 7D4C                       u25 7D72                       u35 7D98  
                    l712 7E30                      l810 7F2C                      l740 7E78  
                    l726 7E54                      l670 7DC4                      l662 7DB8  
                    l824 7F50                      l754 7E9C                      l852 7F98  
                    l684 7DE8                      l838 7F74                      l782 7EE4  
                    l880 7FE6                      l768 7EC0                      l866 7FBC  
                    l698 7E0C                      l796 7F08                      u407 7E5A  
                    u417 7E7E                      u507 7FC2                      u427 7EA2  
                    u517 7FEC                      u437 7EC6                      u447 7EEA  
                    u367 7DCA                      u457 7F0E                      u377 7DEE  
                    u467 7F32                      u387 7E12                      u477 7F56  
                    u397 7E36                      u487 7F7A                      u497 7F9E  
           __CFG_BOR$OFF 000000                      _clk 7C94                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     ?_clk 0001  
           __CFG_PWRT$ON 000000                     _main 7DB2                     start 0000  
          __CFG_MCLRE$ON 000000                    ??_clk 0001            __CFG_PLLDIV$5 000000  
                  ?_main 0004            __CFG_USBDIV$2 000000                    main@i 000A  
                  status 000FD8          __initialization 7C9A             __end_of_main 8000  
                 ??_main 0009            __activetblptr 000000           __CFG_VREGEN$ON 000000  
             __accesstop 0060  __end_of__initialization 7C9A          __CFG_PBADEN$OFF 000000  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
         shift_data@data 0003                  __pcinit 7C9A                  __ramtop 0800  
                __ptext0 7DB2                  __ptext1 7CA0                  __ptext2 7C94  
           __size_of_clk 0006     end_of_initialization 7C9A               _shift_data 7CA0  
              _TRISAbits 000F92                _TRISBbits 000F93      start_initialization 7C9A  
            __end_of_clk 7C9A              ?_shift_data 0001      __size_of_shift_data 0112  
               _LATAbits 000F89                 _LATBbits 000F8A                main@i_300 000B  
              main@i_301 000C                main@i_310 0015                main@i_302 000D  
              main@i_311 0016                main@i_303 000E                main@i_312 0017  
              main@i_304 000F                main@i_313 0018                main@i_305 0010  
              main@i_314 0019                main@i_306 0011                main@i_307 0012  
              main@i_308 0013                main@i_309 0014                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 024E             ??_shift_data 0001  
               main@argc 0004                 main@argv 0006    __CFG_CPUDIV$OSC1_PLL2 000000  
     __end_of_shift_data 7DB2       __CFG_FOSC$HSPLL_HS 000000  
